const snarkjs = require("snarkjs");
// const resp = {
//   creds: {
//     issuerAddress: '0x03fae82f38bf01d9799d57fdda64fad4ac44e4c2c2f16c5bf8e1873d0a3e1993',
//     secret: '0x2bb6475e04621fc3b10f7a797b7384a4231a9a512238a40bab6bd2ef91ca674b',
//     customFields: [
//       '0x000000000000000000000000000000000000000000000000000000039f1a5cf9',
//       '0x05c1b08b78ab11a57668a9e0cd4b6a6a1cd4715a3ab30c5776d0a7654b6ad76f'
//     ],
//     iat: '0x00000000000000000000000000000000000000000000000000000000e7813367',
//     scope: '0x0000000000000000000000000000000000000000000000000000000000000000',
//     serializedAsPreimage: [
//       '0x03fae82f38bf01d9799d57fdda64fad4ac44e4c2c2f16c5bf8e1873d0a3e1993',
//       '0x2bb6475e04621fc3b10f7a797b7384a4231a9a512238a40bab6bd2ef91ca674b',
//       '0x000000000000000000000000000000000000000000000000000000039f1a5cf9',
//       '0x05c1b08b78ab11a57668a9e0cd4b6a6a1cd4715a3ab30c5776d0a7654b6ad76f',
//       '0x00000000000000000000000000000000000000000000000000000000e7813367',
//       '0x0000000000000000000000000000000000000000000000000000000000000000'
//     ]
//   },
//   leaf: '0x173a3d0e4e728c791798770c4d17373fd8e8779fa4fca660024fe418a0adc369',
//   pubkey: {
//     x: '0x1e1ce6aa699d072533665a0e41c293f44fc355c2f47862350a86c3c3e7427b87',
//     y: '0x2451cb915ec3574004f28a4da7a0eec4c594906180df4f10ff65aedeef5df928'
//   },
//   signature: {
//     R8: {
//       x: '0x1abdddd15a0869a21a82d87c014ddccfa3af8895cf652f713bdced3ab56db4b7',
//       y: '0x2251faaaccb8555853ca3d4fa0c89fec888bfa331faac0823deb59a226ffdb66'
//     },
//     S: '0x35caa561e81d363901ab11e20a2691ccb5dec44f621154775a1b7cca0c287d5'
//   }
// }
// const {
//   pubKeyX: 
//   pubKeyY: 2593627226238551346388740194249599576596738764266592363117800938370265791410n,
//   R8x: 13828306721111752079062276346632169976796604849859857306322629641359520130912n,
//   R8y: 12231362695645765782588018496727028944711211434767789872119797019150304278002n,
//   S: 2578503368678037069630456701376536975146417485004009163014246535677695004981n,
//   signedLeaf: 13906827554246231219325858456829444778059843423508322844443754435318341423803n,
//   newLeaf: 21541122778668866935059576308971664479706982915057114400069391324849692980898n,
//   signedLeafSecret: 9001603325174198369572179425078700555105305509349038532466602062937181091436n,
//   newLeafSecret: 15530807709269554253496393594069401699311238364234836762975083481780509173746n,
//   iat: 3883852309n,
//   customFields: [ 123456769n, 987654321n ],
//   scope: 0n
// }
async function onAddLeafProof (data) {
  const params = {
    pubKeyX: data.pubkey.x,
    pubKeyY: data.pubkey.y,
    R8x: data.signature.R8.x,
    R8y: data.signature.R8.y,
    S: data.signature.S,
    signedLeaf: data.leaf,
    newLeaf: data.newLeaf,
    signedLeafSecret: data.creds.secret,
    newLeafSecret: data.creds.newSecret,
    iat: data.creds.iat,
    customFields: data.creds.customFields,
    scope: data.creds.scope
  }
  return await snarkjs.groth16.fullProve(params, "https://preproc-zkp.s3.us-east-2.amazonaws.com/circom/onAddLeaf_js/onAddLeaf.wasm", "https://preproc-zkp.s3.us-east-2.amazonaws.com/circom/onAddLeaf_0001.zkey");
}

module.exports = {
  onAddLeafProof: onAddLeafProof,
} 
